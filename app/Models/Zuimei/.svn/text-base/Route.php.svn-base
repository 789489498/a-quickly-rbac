<?php

namespace Qihoo;

class Route
{
    const TABLE = "qihoo_route";

    public static function getQuery($page, $pageSize, $params)
    {
        $table = "qihoo_route as r";
        $where = self::getQueryConditions($params);
        $offset = ($page - 1) * $pageSize;
        $limit = "limit {$pageSize} offset {$offset}";

        $totalSql = "select count(*) as total from $table $where";
        $result = \DB::select($totalSql, $params);
        $total = empty($result) ? 0 : $result[0]->total;

        $sql = "select * from $table $where order by id desc $limit";
        $result = \DB::select($sql, $params);

        return array($total, $result);
    }

    public static function getQueryConditions(&$params)
    {
        $conditions = array();
        if (!empty($params['name'])) {
            $conditions[] = "r.name=:name";
        }
        if (!empty($params['mid_1'])) {
            $conditions[] = "r.mid_1=:mid_1";
        }
        if (!empty($params['mid_2'])) {
            $conditions[] = "r.mid_2=:mid_2";
        }
        if (!empty($params['mid_3'])) {
            $conditions[] = "r.mid_3=:mid_3";
        }

        $where = implode(" and ", $conditions);
        if (empty($where)) {
            return "";
        } else {
            return "where {$where}";
        }
    }

    /**
     * 根据三级或二级菜单ID寻找默认路由
     */
    public static function getDefaultRoute($menuId, $level)
    {
        if ($level == 3) {
            $where = array('is_default' => 1, 'mid_3' => $menuId);
        } elseif ($level == 2) {
            // if mid_2 is default route, then mid_3 must be 0 in the condition
            $where = array('is_default' => 1, 'mid_3' => 0,'mid_2' => $menuId);
        }
        $result = \DB::find(self::TABLE, $where);
        $route = empty($result) ? null : $result[0];
        if (empty($route)) {
            return false;
        } else {
            return $route->route;
        }
    }

    /**
     * 获取可选的路由，供建立角色
     */
    public static function getRoleRoutes()
    {
        $allRoute = \DB::all(self::TABLE);
        $routes = array();
        foreach ($allRoute as $v) {
            $routes[$v->mid_1][$v->mid_2][$v->mid_3][$v->id] = $v;
        }
        return $routes;
    }

    /**
     * 获取所有Controller路由，转换成url格式，供自动创建route
     */
     public static function getControllerRoutes()
     {
        $allRoute = \DB::all(self::TABLE);
         $routes = array();
         foreach ($allRoute as $v) {
             $atPos = strpos($v->route, "@");
             $len = $atPos - strlen("Controller");
             $controller = substr($v->route, 0, $atPos);
             $route = strtolower(str_replace("\\", "/", substr($v->route, 0, $len)));
             $routes[$route] = $controller;
         }

         return $routes;
     }
}
