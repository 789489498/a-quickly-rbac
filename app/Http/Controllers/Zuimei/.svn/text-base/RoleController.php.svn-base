<?php

namespace Qihoo;

class RoleController extends \BaseController
{
    public $defaultPage = 1;
    public $defaultPageSize = 20;

    public function getListAction()
    {
        $page = $this->defaultPage;
        $pageSize = $this->defaultPageSize;
        $params = array();
        list($total, $records) = Role::getQuery($page, $pageSize, $params);
        $totalPages = ceil($total / $pageSize);

        return \View::make("qihoo.role.list", array(
            'records' => $records,
            'total' => $total,
            'page'  => $page,
            'totalPages' => $totalPages,
            'pageSize' => $pageSize,
        ));
    }

    public function postQueryAction()
    {
        $page = \Input::get('page') ? : $this->defaultPage;
        $pageSize = \Input::get('page_size') ? : $this->defaultPageSize;
        $params = $this->getQueryParams();
        list($total, $records) = Role::getQuery($page, $pageSize, $params);
        $totalPages = ceil($total / $pageSize);

        return \View::make("qihoo.role.query", array(
            'records' => $records,
            'total' => $total,
            'page'  => $page,
            'totalPages' => $totalPages,
            'pageSize' => $pageSize,
        ));
    }

    public function getAddAction()
    {
        return \View::make("qihoo.role.add");
    }

    public function postAddAction()
    {
        $data = array(
            'name'  => \Input::get('name'),
        );

        $role = array(
            'name'        => $data['name'],
            'create_time' => date('Y-m-d'),
            'operator'    => User::getUsername(),
        );
        \DB::insert(Role::TABLE, $role);

        return \Response::redirect(\URL::route("Qihoo\RoleController@getAddAction"));
    }

    public function getUpdateAction()
    {
        $id = \Input::get("id");
        if (empty($id)) {
            throw new \Exception("id is missing");
        }
        $role = \DB::findOne(Role::TABLE, array('id' => $id));
        if (empty($role)) {
            throw new \Exception("role not found");
        }

        $routes = Route::getRoleRoutes();
        $menuMap = Menu::getMenuMap();

        return \View::make("qihoo.role.update", array(
            "role"  => $role,
            "routes"  => $routes,
            "menuMap" => $menuMap,
        ));
    }

    public function postUpdateAction()
    {
        $data = array(
            'id'     => \Input::get('id'),
            'name'   => \Input::get('name'),
            'routes' => \Input::get('routes', array()),
        );
        if (empty($data['id']) || empty($data['name'])) {
            throw new \Exception("id or name is missing");
        }
        $role = \DB::findOne(Role::TABLE, array('id' => $data['id']));
        if (empty($role)) {
            throw new \Exception("role not found");
        }
        $role = array(
            'name'     => $data['name'],
            'operator' => User::getUsername(),
        );
        \DB::update(Role::TABLE, $role, array('id' => $data['id']));

        RoleRoute::flushRoutes($data['id'], $data['routes']);

        return \Response::redirect(\URL::route("Qihoo\RoleController@getListAction"));
    }

    public function getDeleteAction()
    {
        $data = array(
            'id' => \Input::get("id"),
        );

        if (empty($data['id'])) {
            throw new \Exception("id is missing");
        }
        $role = \DB::findOne(Role::TABLE, array("id" => $data["id"]));
        if (empty($role)) {
            throw new \Exception("role not found");
        }

        \DB::delete(Role::TABLE, array('id' => $role->id));
        \DB::delete(UserRole::TABLE, array('role_id' => $role->id));

        return \Response::redirect(\URL::route("Qihoo\RoleController@getListAction"));
    }

    protected function getQueryParams()
    {
        $params = array();
        $name = \Input::get('name');

        if (!empty($name)) {
            $params['name'] = $name;
        }

        return $params;
    }
}
